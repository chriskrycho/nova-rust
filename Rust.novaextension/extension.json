{
  "identifier": "com.kilb.rust",
  "name": "Rust",
  "organization": "Drew Kilb",
  "description": "Rust language support for Nova featuring Rust Analyzer, syntax definitions, and format on save.",
  "repository": "https://github.com/kilbd/nova-rust",
  "bugs": "https://github.com/kilbd/nova-rust/issues",
  "license": "MIT",
  "version": "2.4.0",
  "categories": ["languages", "formatters"],
  "min_runtime": "9.0",

  "main": "main.js",

  "activationEvents": [
    "onWorkspaceContains:Cargo.toml",
    "onWorkspaceContains:rust-project.json"
  ],

  "entitlements": {
    "process": true,
    "requests": true,
    "filesystem": "readwrite"
  },

  "commands": {
    "editor": [
      {
        "title": "Rename Symbol",
        "command": "com.kilb.rust.rename",
        "when": "editorSyntax == 'rust'"
      },
      {
        "title": "Restart Rust Analyzer",
        "command": "com.kilb.rust.restart",
        "when": "editorSyntax == 'rust'"
      }
    ],
    "text": [
      {
        "title": "Rename Symbol",
        "command": "com.kilb.rust.rename",
        "shortcut": "f2",
        "when": "editorSyntax == 'rust'"
      }
    ]
  },

  "config": [
    {
      "title": "Formatting",
      "type": "section",
      "children": [
        {
          "key": "com.kilb.rust.rustfmt-on-save",
          "title": "Format on Save",
          "description": "If enabled, files are formatted with `rustfmt` after saving.",
          "type": "boolean",
          "default": false
        },
        {
          "key": "com.kilb.rust.rustfmt-nightly",
          "title": "Use Rstfmt Nightly",
          "description": "If Format on Save is enabled, this uses the latest and greatest Rustfmt features. You must have the nightly toolchain installed (i.e., have run `rustup component add rustfmt --toolchain nightly`).",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "title": "Issues",
      "description": "Configure the source of Nova Issues created after saving files.",
      "type": "section",
      "children": [
        {
          "key": "com.kilb.rust.lint-command",
          "title": "(Cargo) Lint Command",
          "link": "https://github.com/rust-lang/rust-clippy#clippy",
          "type": "enum",
          "values": [
            ["check", "check (compiler warnings)"],
            ["clippy", "clippy (compiler + Clippy warnings)"]
          ],
          "default": "check"
        },
        {
          "key": "com.kilb.rust.lint-args",
          "title": "Additional Arguments",
          "description": "Arguments to pass to the Cargo lint command you selected.",
          "type": "string"
        }
      ]
    },
    {
      "title": "Environment",
      "type": "section",
      "children": [
        {
          "key": "com.kilb.rust.env-vars",
          "title": "Environment Variables",
          "description": "These values are passed to Rust Analyzer and tasks created with the Cargo template. Each entry should have the format VARIABLENAME=somevalue. Values here will apply to any Rust project, and are useful for global settings like RUST_BACKTRACE=1.",
          "type": "stringArray"
        }
      ]
    }
  ],
  "configWorkspace": [
    {
      "title": "Issues",
      "description": "Configure the source of Nova Issues created after saving files.",
      "type": "section",
      "children": [
        {
          "key": "com.kilb.rust.lint-command",
          "title": "(Cargo) Lint Command",
          "link": "https://github.com/rust-lang/rust-clippy#clippy",
          "type": "enum",
          "values": [
            [null, "Use global setting"],
            ["check", "check (compiler warnings)"],
            ["clippy", "clippy (compiler + Clippy warnings)"]
          ],
          "default": null
        },
        {
          "key": "com.kilb.rust.lint-args",
          "title": "Additional Arguments",
          "description": "Arguments to pass to the Cargo lint command you selected.",
          "type": "string"
        }
      ]
    },
    {
      "title": "Environment",
      "type": "section",
      "children": [
        {
          "key": "com.kilb.rust.env-vars",
          "title": "Environment Variables",
          "description": "These values are passed to Rust Analyzer and tasks created with the Cargo template. Each entry should have the format VARIABLENAME=somevalue. Values here will apply only to this project and can override global settings. A useful example is setting DATABASE_URL which is required by the sqlx::query macro.",
          "type": "stringArray"
        }
      ]
    }
  ],
  "taskTemplates": {
    "cargo": {
      "name": "Cargo",
      "description": "Easily set up common Cargo commands.",
      "tasks": {
        "build": {
          "resolve": "com.kilb.rust.assistants.cargo"
        },
        "run": {
          "resolve": "com.kilb.rust.assistants.cargo"
        },
        "clean": {
          "shell": true,
          "command": "cargo",
          "args": ["clean"]
        }
      },
      "config": [
        {
          "key": "com.kilb.rust.cargo.build.subcommand",
          "title": "Build Subcommand",
          "description": "The Cargo command to run for Build task.",
          "type": "enum",
          "values": ["build", "test", "bench"],
          "default": "build",
          "radio": true
        },
        {
          "key": "com.kilb.rust.cargo.build.args",
          "title": "Additional Arguments",
          "description": "Arguments to pass to the selected Cargo command for Build task.",
          "type": "string"
        },
        {
          "key": "com.kilb.rust.cargo.run.subcommand",
          "title": "Run Subcommand",
          "description": "The Cargo command to run for Run task.",
          "type": "enum",
          "values": ["run", "test", "bench"],
          "default": "run",
          "radio": true
        },
        {
          "key": "com.kilb.rust.cargo.run.args",
          "title": "Additional Arguments",
          "description": "Arguments to pass to the selected Cargo command for Run task.",
          "type": "string"
        }
      ]
    }
  }
}
